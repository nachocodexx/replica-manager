node-id = "lb-0"
node-id = ${?NODE_ID}
pool-id = "load-balancer-0"
pool-id = ${?POOL_ID}
host = "0.0.0.0"
host = ${?NODE_HOST}
port = 3000
port = ${?NODE_PORT}
max-rf = 1
max-rf = ${?MAX_RF}

system-replication = {
  protocol = "http",
  ip       = 127.0.0.1,
  hostname = "localhost",
  port = 1025,
  api-version = "v6",
}
system-replication.protocol = ${?SYSTEM_REPLICATION_PROTOCOL}
system-replication.ip = ${?SYSTEM_REPLICATION_IP}
system-replication.hostname = ${?SYSTEM_REPLICATION_HOSTNAME}
system-replication.port = ${?SYSTEM_REPLICATION_PORT}

rabbitmq {
  nodes = [
    {
      host: "localhost",
      port: 5672,
    }
  ]
  virtual-host = "/",
  connection-timeout = 3,
  ssl = false,
  username = "guest",
  password = "guest",
  requeue-on-nack = false,
  requeue-on-reject = false,
  internal-queue-size = 500
}

rabbitmq.nodes = ${?RABBITMQ_NODES}
rabbitmq.virtual-host = ${?RABBITMQ_VIRTUAL_HOST}
rabbitmq.connection-timeout = ${?RABBITMQ_CONNECTION_TIMEOUT}
rabbitmq.ssl = ${?RABBITMQ_SSL}
rabbitmq.username = ${?RABBITMQ_USERNAME}
rabbitmq.password = ${?RABBITMQ_PASSWORD}
rabbitmq.requeue-on-nack = ${?RABBITMQ_REQUEUE_ON_NACK}
rabbitmq.requeue-on-reject = ${?RABBITMQ_REQUEUE_ON_REJECT}
rabbitmq.internal-queue-size = ${?RABBITMQ_INTERNAL_QUEUE_SIZE}
